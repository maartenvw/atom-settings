{"name":"atom-minify","main":"./lib/atom-minify","version":"0.6.2","description":"Minifies JS and CSS files, optionally on save.","repository":{"type":"git","url":"git+https://github.com/armin-pfaeffle/atom-minify.git"},"license":"MIT","engines":{"atom":">=0.185.0 <2.0.0"},"dependencies":{"atom-space-pen-views":"^2.0.3","event-kit":"^1.2.0","node-uuid":"^1.4.3","clean-css":"^3.3.5","csso":"^1.3.11","sqwish":"^0.2.2","uglify-js":"^2.4.19","loophole":"^1.1.0"},"readme":"# atom-minify\n\nMinifies JS and CSS files, optionally on save; now supporting inline-parameters.\n\n---\n\nBecause [minifier](https://atom.io/packages/minifier) is no longer maintained, I created [atom-minify](https://atom.io/packages/atom-minify) which includes **four CSS and three JS minifiers**. Another feature is the flexible configuration which should give you full control over minification and created files. Inline-parameters complete the way of defining the output.\n\n*Since version 0.6.0. minifier options are supported!*\n\nHave a look at the [roadmap](#roadmap) for upcoming features.\n\n\n## Requirements\n\nWhen you want to use **YUI Compressor** or **Google Closure Compiler**, you must install [Java](https://www.java.com/de/download/). If Java is not present, you will see an error message.\n\n\n\n## Usage\n\n#### Basic usage\nAfter installing [atom-minify](https://atom.io/packages/atom-minify) you can use two shortcuts to access the **two different minification functionalites**:\n\n1. `ctrl-shift-m`: Minify content of opened file to a new file (see [minified filename pattern](#filename-pattern-for-minified-css-file)). If file already exists, content is overwritten.\n2. `alt-shift-m` / `cmd-shift-m`: Direct minification of content. Does not create a new file, nor save the modification. If you have an unsaved file, you also can minify content, but you are asked which content type (CSS or JS) it is.\n\nBeside the shortcuts you also have the possibility to access these actions by menu:\n- `Package` → `Minify` → `Minify to minified file`\n- `Package` → `Minify` → `Direct Minification`.\n\n#### Minify on save\n\nBeside the shortcuts and menu items, you can enable option [Minify on save](#minify-on-save) (shortcut: `ctrl-alt-shift-m`/ `ctrl-cmd-shift-m`), so everytime you save a CSS or JavaScript file, it is directly minified to a new minified file.\n\n#### 4+3 minifiers\nBecause `node-minify` supports **four CSS and three JS minifiers** you can select which one to use. Especially when you don't want to install Java on your system, these feature is great for you. There even exists [predefined shortcuts](#predefined-shortcuts) for instant changing the minifier.\n\n#### Options & parameters\nBeside the basic functionality, have a look at the [options](#options). You can configure a lot of things ;)\n\nSince version 0.3 you have the possibility to use [inline-parameters](#inline-parameters), defined as comment in the first line of you CSS or JS file. With these parameters you can overwrite the global options.\n\n\n\n## Options\n\n- #### Minify on save\nThis option en-/disables minification on save. This is especially useful when you want to create minified files everytime you save a CSS or JavaScript file.  \n**Shortcut for en-/disable this option**: `ctrl-alt-shift-m` / `ctrl-cmd-shift-m`  \n*__Default__: false*\n\n- #### Show saving info\nIf enabled some information about saving are shown in notification or panel.  \n*__Default__: true*\n\n- #### Ask for overwriting already existent minified files\nIf enabled atom-minify asks you if you want to overwrite the target output file if it already exists.  \n*__Default__: false*\n\n- #### Ask for minification of already minified files\nIf enabled current filename is checked for containing `.min.`, `.minified.` and `.compressed.`. If so, atom-minify assumes that content is already minified and asks you if you want to minify the file again.  \n*__Default__: true*\n\n- #### Show Minify-item in Tree View context menu\nIf enabled you can minify a file via Tree View context menu. You can choose between showing the item on every file or only on CSS and JavaScript files.\n*__Default__: Only on CSS and JS files*\n\n- #### General output path\nDefines a general output path for minified files, e.g. `min/dev/` or `compressed`. You can use an absolute or relative path. Have a look at the inline parameter `outputPath` which should be more suitable in most cases.  \n*__Default__: ''*\n\n- #### Buffer\nOnly modify the buffer size when you have to compile large files, [see node-minify documentation](https://www.npmjs.com/package/node-minify#max-buffer-size).  \n*__Default__: 1000 * 1024*\n\n- #### CSS → Minifier\nDefines which CSS minifier you want to use. Current options: [YUI Compressor](http://developer.yahoo.com/yui/compressor/), [clean-css](https://github.com/GoalSmashers/clean-css), [CSSO](https://github.com/css/csso), [Sqwish](https://github.com/ded/sqwish).  \n**See [Predefined shortcuts](#predefined-shortcuts) for changing minifier via shortcut**  \n*__Default__: YUI Compressor*\n\n- #### CSS → Filename pattern for minified file\nDefines the replacement pattern for minified CSS filename. You can use two placeholders: `$1` for filename without extenion, `$2` for file extension. Example: the default value `$1.min.$2` generates from filename `Foo.CSS` the minified filename `Foo.min.CSS`.  \n*__Default__: $1.min.$2*\n\n- #### CSS → Options for YUI Compressor\nCustom options for CSS minifier **YUI Compressor**, [see OPTIONS.md](https://github.com/armin-pfaeffle/atom-minify/blob/master/OPTIONS.md).  \n*__Default__: ''*\n\n- #### CSS → Options for clean-css\nCustom options for CSS minifier **clean-css**, [see OPTIONS.md](https://github.com/armin-pfaeffle/atom-minify/blob/master/OPTIONS.md).  \n\n- #### CSS → Options for CSSO\nCustom parameters for CSS minifier **CSSO**, [see OPTIONS.md](https://github.com/armin-pfaeffle/atom-minify/blob/master/OPTIONS.md).  \n*__Default__: ''*\n\n- #### CSS → Options for Sqwish\nCustom options for CSS minifier **Sqwish**, [see OPTIONS.md](https://github.com/armin-pfaeffle/atom-minify/blob/master/OPTIONS.md).  \n*__Default__: ''*\n\n- #### JS → Minifier\nDefines which JS minifier you want to use. Current options: [YUI Compressor](http://developer.yahoo.com/yui/compressor/), [Google Closure Compiler](https://developers.google.com/closure/compiler/), [UglifyJS2](https://github.com/mishoo/UglifyJS2).  \n**See [Predefined shortcuts](#predefined-shortcuts) for changing minifier via shortcut**  \n*__Default__: YUI Compressor*\n\n- #### JS → Filename pattern for minified file\nDefines the replacement pattern for minified JS filename. You can use two placeholders: `$1` for filename without extenion, `$2` for file extension. Example: the default value `$1.min.$2` generates from filename `Bar.JS` the minified filename `Bar.min.JS`.  \n*__Default__: $1.min.$2*\n\n- #### JS → Options for YUI Compressor\nCustom options for CSS minifier **YUI Compressor**, [see OPTIONS.md](https://github.com/armin-pfaeffle/atom-minify/blob/master/OPTIONS.md).  \n*__Default__: ''*\n\n- #### JS → Options for Google Closure Compiler\nCustom options for CSS minifier **Google Closure Compiler**, [see OPTIONS.md](https://github.com/armin-pfaeffle/atom-minify/blob/master/OPTIONS.md).  \n*__Default__: ''*\n\n- #### JS → Options for UglifyJS2\nCustom options for CSS minifier **UglifyJS2**, [see OPTIONS.md](https://github.com/armin-pfaeffle/atom-minify/blob/master/OPTIONS.md).  \n*__Default__: ''*\n\n- #### Notifications\nThis options allows you to decide which feedback you want to see when SASS files are compiled: notification and/or panel.  \n**Panel**: The panel is shown at the bottom of the editor. When starting the compilation it's only a small header with a throbber. After compiliation a success or error message is shown with reference to the CSS file, or on error the SCSS file. By clicking on the message you can access the CSS or error file.  \n**Notification**: The default atom notifications are used for output.  \n*__Default__: Panel*\n\n- #### Automatically hide panel on ...\nSelect on which event the panel should automatically disappear. If you want to hide the panel via shortcut, you can use `ctrl-alt-shift-h` / `ctrl-cmd-shift-h`.  \n*__Default__: Success*\n\n- #### Panel-auto-hide delay\nDelay after which panel is automatically hidden.\n*__Default__: 3000*\n\n- #### Automatically hide notifications on ...\nDecide when you want the notifications to automatically hide. Else you have to close every notification manually.  \n*__Default__: Info, Success*\n\n- #### Show 'Start Minification' Notification\nIf enabled and you added the notification option in `Notifications`, you will see an info-message when minification process starts.  \n*__Default__: false*\n\n- #### Advanced → Java path\nIf you have more than one Java installation or you have a special constellation, you can use this option to define a path to a Java executable. This executable is used for YUI and GCC minifiers.  \n*__Default__: ''*\n\n\n## Inline-parameters\n\nSince version 0.3 you can define inline-parameters that overwrites the global options. These parameters applies only for current file. Here are the rules:\n\nYou can add them by writing a comment to the first line of your CSS or JS file. The parameters must be comma-separated. Values are optional If you need a comma as value, you have to put it into single or double quotation marks.\n\n- Parameters must be placed as comment in the **first** line\n- Comma-separated parameters\n- Parameters are entered this way: `key:value` ‒ you can have spaces before and after key and value, e.g. ` key : value `\n- Values are optional; if no value is given, parameter has value `true`\n- If value contains a comma, value must be surrounded by single/double quotation marks\n\n\nExamples for CSS files:\n```css\n/* filenamePattern: test/$1.compressed.$2, outputPath: \"compressed/dev, tested/\" */\n/* This definition redefines the filename pattern and additionally adds the\n   subdirectory 'test'. Furthermore an output path is defined, so the resultant\n   path is 'compressed/dev/test/<filename>'. Have a look at the usage of the comma! */\nbody {\n}\nh1 {\n}\n```\n```css\n/* outputPath: dev, uncompressed, minifierOptions: \"line-break = 100\" */\n/* This definition put the outputs file to 'dev' subdirectory. Beside that\n   the content is not minified, which can be useful for development */\nbody {\n}\nh1 {\n}\n```\n\nExample for JS files:\n```js\n// minifier: uglify-js, buffer: 8388608, minifierOptions: \"charset = utf-8 nomunge\"\n/* This parameters ensures, that YUI compressor is used for this file.\n   Furhtermore it tells the minifier to use up to 8MB buffer, which can be\n   useful for large files.\n   As you can see, the minifierOptions parameter is still under\n   construction ;) */\nfunction(document, window, undefined) {\n    alert('Hello World!')\n}(document, window);\n```\n\n### Available parameters\n\n- #### compress: false / uncompressed\nWith these parameter you can disable minification, so output is not minified. Can be useful for development process.\n\n- #### filenamePattern\nDefines the replacement pattern for minified CSS or JS filename. You can use two placeholders: `$1` for filename without extenion, `$2` for file extension. Example: the default value `$1.min.$2` generates from filename `Foo.CSS` the minified filename `Foo.min.CSS`.\n\n- #### outputPath\nDefines a relative or absolute path where minified file is placed. Can be combined with `filenamePattern`.\n\n- #### minifier\n  Selects the minifier to compile with.\n\n  *CSS:*\n    - `clean-css`\n    - `csso`\n    - `sqwish`\n    - `yui-css`\n\n  *JavaScript:*\n    - `gcc`\n    - `uglify-js`\n    - `yui-js`\n\n\n- #### minifierOptions\nSee [OPTIONS.md](https://github.com/armin-pfaeffle/atom-minify/blob/master/OPTIONS.md) for more information about custom minifier options.\n\n- #### buffer\nThis value sets the buffer size in Bytes. It must be a value Integer and **greater than 1024 * 1024 = 1MB**.\n\n\n\n## Predefined shortcuts\n\n- #### `ctrl-shift-m`\nMinify content of opened file to **a new file**. The filename of the new file is specified by **Filename pattern for minified CSS/JS file** options. Minification only works on files that ends with `.css` or `.js` (comparison is case **insensitive**).\n\n- #### `alt-shift-m` / `cmd-shift-m`\nMinify content of opened file. This command does not create a new file, nor saves the minified content. If file extension is `.css` or `.js` the minifier is automatically detected, else you are asked which minifier to use. This option is especially useful when you want to quickly minify CSS or JavaScript without creating a file.\n\n- #### `ctrl-alt-shift-m` / `ctrl-cmd-shift-m`\nEn- or disables option [Minify on save](#minify-on-save).\n\n- #### `ctrl-alt-shift-h` / `ctrl-cmd-shift-h`\nCloses notification panel if visible.\n\n- #### `ctrl-alt-shift-c ctrl-1` / `ctrl-cmd-shift-c ctrl-1`\nSelect the CSS minifier **YUI Compressor**.\n\n- #### `ctrl-alt-shift-c ctrl-2` / `ctrl-cmd-shift-c ctrl-2`\nSelect the CSS minifier **clean-css**.\n\n- #### `ctrl-alt-shift-c ctrl-3` / `ctrl-cmd-shift-c ctrl-3`\nSelect the CSS minifier **CSSO**.\n\n- #### `ctrl-alt-shift-c ctrl-4` / `ctrl-cmd-shift-c ctrl-4`\nSelect the CSS minifier **Sqwish**.\n\n- #### `ctrl-alt-shift-j ctrl-1` / `ctrl-cmd-shift-j ctrl-1`\nSelect the CSS minifier **YUI Compressor**.\n\n- #### `ctrl-alt-shift-j ctrl-2` / `ctrl-cmd-shift-j ctrl-2`\nSelect the CSS minifier **Google Closure Compiler**.\n\n- #### `ctrl-alt-shift-j ctrl-3` / `ctrl-cmd-shift-j ctrl-3`\nSelect the CSS minifier **UglifyJS2**.\n\n\n## Issues, questions & feedback\n\n[Please post issues on GitHub](https://github.com/armin-pfaeffle/atom-minify/issues).\n\nFor other concerns like questions or feeback [have a look at the discussion thread on atom.io](https://discuss.atom.io/t/feedback-questions-about-atom-minify/).\n\n\n## Roadmap\n\n- Minify content to a new, unsaved file, so user can decide where to save the new file\n- Minify HTML/JSON/XML/etc.?\n- Compress more than one file to a minified file\n\n\n## Changelog\n\n**0.6.2 - 13.11.2015**\n- Fixed missing dependency in package.json\n\n**0.6.1 - 13.11.2015**\n- Bugfix: Fixed CSP restrictions (EvalError, unsafe-eval) with latest uglify-js version, [issue #17](https://github.com/armin-pfaeffle/atom-minify/issues/17)\n\n**0.6.0 - 04.11.2015**\n- Added new feature: options for minifiers\n- Improved panel notifications\n- Improved inline parameter parsing\n- Improved shortcuts\n- Updated Google Closure Compiler\n- Bugfix: Quoted parameters could lead to incorrect behaviour\n- Bugfix: Warning of too less buffer size was never visible to user\n\n**0.5.0 - 27.10.2015**\n- Optimized parameter parsing\n- Improved shortcuts\n- Improved notification panel\n- Improved main menu entry\n- Improved notifications\n- Bugfix: \"Minify\" item in Tree View context menu was not always visible on file items\n- Bugfix: \"Minify\" item in Tree View context menu was not working correctly\n- Bugfix: Multiple minifcation were possible\n- Bugfix: Opening file by clicking on panel notification could fail\n- Minor improvements and bugfixes\n\n**0.4.2 - 17.09.2015**\n- Buxfix: Incorrect file existence check in delete file method\n\n**0.4.1 - 01.09.2015**\n- Fixed documentation\n\n**0.4.0 - 01.09.2015**\n- New option: Advanced → Java path for defining an absolute path to a special Java installation\n- Minor improvements\n\n**0.3.1 - 25.08.2015**\n- Bugfix: Recursive creation of non-existent output directory failed on Darwin and Linux, see [issue #11](https://github.com/armin-pfaeffle/atom-minify/issues/11)\n\n**0.3.0 - 22.08.2015**\n- General: Output path is automatically created when not existent\n- General: Reordering options in settings view\n- General: Minifiyng a unsaved file leads to a save dialog\n- New feature: Added inline parameters in a first-line-comment to override global settings\n- New feature: Detection of already minified file\n- New feature: 'Minify' item in Tree View context menu\n- New Option: Ask for overwriting already existent minified files\n- New Option: Ask for minification of already minified files\n- New Option: Show Minify-item in Tree View context menu\n- New Option: General output path\n- Improved panel: Better clickable lines for opening files\n- Improved panel: When trying opening file by clicking on filename and it does not exist, panel shows an corresponding information and does not open an empty file\n- Improved menu: Better menu usability and fixed visual binding problem\n- Bugfix: Added try-catch-block when deleting temporary files, so no `Uncaught Error` message occurs, see [issue #10](https://github.com/armin-pfaeffle/atom-minify/issues/10)\n- Bugfix: panel was still visible although nothing was minified\n\n**0.2.2 - 27.07.2015**\n- Fixed link in documentation\n\n**0.2.1 - 24.07.2015**\n- Improved and fixed panel notification\n\n**0.2.0 - 12.07.2015**\n- Complete rewrite of package, not depending on node-minify any more\n- Improved output filename generation\n- Minor improvements\n\n**0.1.7 - 01.07.2015**\n- Bugfix: CSS parameters ignored ([pull request](https://github.com/armin-pfaeffle/atom-minify/pull/3) by [William Wells](https://github.com/whanwells))\n- Removed unused code\n\n**0.1.5 / 0.1.6 - 27.05.2015**\n- Updated CHANGELOG and README\n\n**0.1.4 - 27.05.2015**\n- Updated required engine version to <=0.185.0, <2.0.0\n\n**0.1.3 - 27.05.2015**\n- Bugfix: Using deprecrated API, so package does not work with API 1.0 (issue [atom/atom#6867](https://github.com/atom/atom/issues/6867))\n\n**0.1.2 - 18.05.2015**\n- Bugfix: Missing require() leads to a call of an undefined variable\n\n**0.1.1 - 08.05.2015**\n- Removed console outputs\n\n**0.1.0 - 08.05.2015**\n- Initial version\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/armin-pfaeffle/atom-minify/issues"},"homepage":"https://github.com/armin-pfaeffle/atom-minify#readme","_id":"atom-minify@0.6.2","_shasum":"3ac62a919c73c1bd10aad90238fbecfb5bd91377","_resolved":"file:../d-1151016-24100-2usg2b/package.tgz","_from":"../d-1151016-24100-2usg2b/package.tgz"}